Принцип работы такой:
В отдельном модуле объявляются модели, наследующие класс sqlite_models.models.ModelParent. Для них определяются поля, являющиеся экземплярами классов sqlite_models.models.Filed*.
В самом скрипте перед началом работы надо создать экземпляр класса sqlite_models.models.BDConnector, который в качестве конструкотора получает путь к файлу с БД и которому потом передаются нужные модели в метод check, в качестве кортежа/списка, второй аргумент определяет, создавать ли нужные таблицы, если их нет. Если таблицы не совпадают - возбуждается исключение. (Проверяет, созданы ли таблицы, для переданных моделей, вызывая их метод __get_sql_check_table__, для получения кода SQL для проверки таблиц. Если второй аргумент равен True, то вызываются их методы __get_sql_create_table__ для создания этих таблиц)
Класс BDConnector подключается к базе и модифицирует переданные ему классы, указывая им, как подключаться к БД через него для выполненпия запросов.
Поля, определённые в модуле sqlite_models.fields содержат тоже два метода: __get_sql_check_table__, который выдаёт код, для проверки существования в таблице нужного столбца, и __get_sql_create_table__, для создания нужного столбца.
Классы выполняют запросы через BDConnector, который им возвращает результат.
Сами модели должны как минимум давать методы для проверки нужной таблицы, создания нужной таблицы и выборки данных с фильтром.